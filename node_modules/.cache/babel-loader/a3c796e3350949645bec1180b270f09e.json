{"ast":null,"code":"import _objectSpread from\"D:\\\\Projects\\\\PAF\\\\Text Manager\\\\Project\\\\text-manager-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"D:\\\\Projects\\\\PAF\\\\Text Manager\\\\Project\\\\text-manager-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";import React,{useEffect,useState}from\"react\";import{TextField,withStyles,Button}from\"@material-ui/core\";import useForm from\"./useForm\";import{connect}from\"react-redux\";import*as actions from\"../actions/postMessage\";import ButterToast,{Cinnamon}from\"butter-toast\";import{AssignmentTurnedIn}from\"@material-ui/icons\";import{browserHistory}from\"react-router\";var initialFieldValues={title:'',message:''};var styles=function styles(theme){return{root:{'& .MuiTextField-root':{margin:theme.spacing(1)}},form:{display:'flex',flexWrap:'wrap',justifyContent:'center'},postBtn:{width:\"15%\",marginLeft:theme.spacing(98)},algntxt:{marginLeft:theme.spacing(98)}};};var PostMessageForm=function PostMessageForm(_ref){var classes=_ref.classes,props=_objectWithoutProperties(_ref,[\"classes\"]);useEffect(function(){if(props.currentId!=0){setValues(_objectSpread({},props.postMessageList.find(function(x){return x._id==props.currentId;})));setErrors({});}},[props.currentId]);var validate=function validate(){var temp=_objectSpread({},errors);temp.title=values.title?\"\":\"This field is required.\";temp.message=values.message?\"\":\"This field is required.\";setErrors(_objectSpread({},temp));return Object.values(temp).every(function(x){return x==\"\";});};var _useForm=useForm(initialFieldValues,props.setCurrentId),values=_useForm.values,setValues=_useForm.setValues,errors=_useForm.errors,setErrors=_useForm.setErrors,handleInputChange=_useForm.handleInputChange,resetForm=_useForm.resetForm;var handleSubmit=function handleSubmit(e){e.preventDefault();var onSuccess=function onSuccess(){ButterToast.raise({content:/*#__PURE__*/React.createElement(Cinnamon.Crisp,{title:\"Post Box\",content:\"Submitted successfully\",scheme:Cinnamon.Crisp.SCHEME_PURPLE,icon:/*#__PURE__*/React.createElement(AssignmentTurnedIn,null)})});resetForm();};if(validate()){if(props.currentId==0)props.createPostMessage(values,onSuccess);else props.updatePostMessage(props.currentId,values,onSuccess);}};return/*#__PURE__*/React.createElement(\"form\",{autoComplete:\"off\",noValidate:true,className:\"\".concat(classes.root,\" \"),onSubmit:handleSubmit},/*#__PURE__*/React.createElement(TextField,Object.assign({className:classes.algntxt,name:\"title\",variant:\"outlined\",label:\" Text Title\",columns:20,value:values.title,onChange:handleInputChange},errors.title&&{error:true,helperText:errors.title})),/*#__PURE__*/React.createElement(TextField,Object.assign({className:classes.form,name:\"message\",variant:\"outlined\",label:\"Enter Your Text Here:\",fullWidth:true,multiline:true,rows:8,value:values.message,onChange:handleInputChange},errors.message&&{error:true,helperText:errors.message})),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",size:\"large\",type:\"submit\",className:classes.postBtn},\"Submit\"),/*#__PURE__*/React.createElement(\"br\",null));};var mapStateToProps=function mapStateToProps(state){return{postMessageList:state.postMessage.list};};var mapActionToProps={createPostMessage:actions.create,updatePostMessage:actions.update};export default connect(mapStateToProps,mapActionToProps)(withStyles(styles)(PostMessageForm));","map":{"version":3,"sources":["D:/Projects/PAF/Text Manager/Project/text-manager-front-end/src/components/PostMessageForm.js"],"names":["React","useEffect","useState","TextField","withStyles","Button","useForm","connect","actions","ButterToast","Cinnamon","AssignmentTurnedIn","browserHistory","initialFieldValues","title","message","styles","theme","root","margin","spacing","form","display","flexWrap","justifyContent","postBtn","width","marginLeft","algntxt","PostMessageForm","classes","props","currentId","setValues","postMessageList","find","x","_id","setErrors","validate","temp","errors","values","Object","every","setCurrentId","handleInputChange","resetForm","handleSubmit","e","preventDefault","onSuccess","raise","content","Crisp","SCHEME_PURPLE","createPostMessage","updatePostMessage","error","helperText","mapStateToProps","state","postMessage","list","mapActionToProps","create","update"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { TextField, withStyles, Button } from \"@material-ui/core\";\r\nimport useForm from \"./useForm\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/postMessage\";\r\nimport ButterToast, { Cinnamon } from \"butter-toast\";\r\nimport { AssignmentTurnedIn } from \"@material-ui/icons\";\r\nimport { browserHistory } from \"react-router\";\r\n\r\nconst initialFieldValues = {\r\n  title: '',\r\n  message: ''\r\n}\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1)\r\n    },\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center'\r\n  },\r\n  postBtn: {\r\n    width: \"15%\",\r\n    marginLeft: theme.spacing(98)\r\n  },\r\n  algntxt: {\r\n    marginLeft: theme.spacing(98)\r\n  }\r\n})\r\n\r\nconst PostMessageForm = ({ classes, ...props }) => {\r\n\r\n  useEffect(() => {\r\n    if (props.currentId != 0) {\r\n      setValues({\r\n        ...props.postMessageList.find(x => x._id == props.currentId)\r\n      })\r\n      setErrors({})\r\n    }\r\n  }, [props.currentId])\r\n\r\n  const validate = () => {\r\n    let temp = { ...errors }\r\n    temp.title = values.title ? \"\" : \"This field is required.\"\r\n    temp.message = values.message ? \"\" : \"This field is required.\"\r\n    setErrors({\r\n      ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n\r\n  var {\r\n    values,\r\n    setValues,\r\n    errors,\r\n    setErrors,\r\n    handleInputChange,\r\n    resetForm\r\n  } = useForm(initialFieldValues, props.setCurrentId)\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    const onSuccess = () => {\r\n      ButterToast.raise({\r\n        content: <Cinnamon.Crisp title=\"Post Box\"\r\n          content=\"Submitted successfully\"\r\n          scheme={Cinnamon.Crisp.SCHEME_PURPLE}\r\n          icon={<AssignmentTurnedIn />}\r\n        />\r\n      })\r\n      resetForm()\r\n    }\r\n    if (validate()) {\r\n      if (props.currentId == 0)\r\n        props.createPostMessage(values, onSuccess)\r\n      else\r\n        props.updatePostMessage(props.currentId, values, onSuccess)\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <form autoComplete=\"off\" noValidate className={`${classes.root} `} onSubmit={handleSubmit}>\r\n      <TextField\r\n        className={classes.algntxt}\r\n        name=\"title\"\r\n        variant=\"outlined\"\r\n        label=\" Text Title\"\r\n        columns={20}\r\n        value={values.title}\r\n        onChange={handleInputChange}\r\n        {...(errors.title && { error: true, helperText: errors.title })}\r\n      />\r\n      <TextField\r\n        className={classes.form}\r\n        name=\"message\"\r\n        variant=\"outlined\"\r\n        label=\"Enter Your Text Here:\"\r\n        fullWidth\r\n        multiline\r\n        rows={8}\r\n        value={values.message}\r\n        onChange={handleInputChange}\r\n        {...(errors.message && { error: true, helperText: errors.message })}\r\n      />\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"large\"\r\n        type=\"submit\"\r\n        className={classes.postBtn}\r\n      >Submit</Button>\r\n      <br />\r\n    </form>\r\n  );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  postMessageList: state.postMessage.list\r\n})\r\n\r\nconst mapActionToProps = {\r\n  createPostMessage: actions.create,\r\n  updatePostMessage: actions.update\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(PostMessageForm));"]},"metadata":{},"sourceType":"module"}