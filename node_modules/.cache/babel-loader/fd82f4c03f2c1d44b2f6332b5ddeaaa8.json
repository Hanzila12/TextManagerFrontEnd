{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\PAF\\\\Text Manager\\\\Project\\\\text-manager-front-end\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Main from \"./Main\";\nimport './App.css';\nimport './index.css';\nimport { Provider } from \"react-redux\";\nimport PostMessages from \"./components/PostMessages\";\nimport { store } from \"./actions/store\";\nimport { Container, AppBar, Typography, withStyles, Button, Grid } from \"@material-ui/core\";\nimport ButterToast, { POS_RIGHT, POS_TOP } from \"butter-toast\";\n\nconst styles = theme => ({\n  someClass: {\n    margin: theme.spacing(2),\n    padding: theme.spacing(2),\n    BackgroundColor: \"AliceBlue\"\n  },\n  otherClass: {\n    background: 'AliceBlue'\n  },\n  upperBtns1: {\n    width: \"40%\",\n    marginLeft: theme.spacing(-80)\n  },\n  upperBtns2: {\n    width: \"40%\",\n    marginLeft: theme.spacing(-60)\n  },\n  actionDiv: {\n    textAlign: \"center\",\n    marginLeft: theme.spacing(93)\n  }\n}); //class App extends Component {\n\n\nconst MyComponent = props => {\n  const onNewBtn = () => {\n    console.log(\"Button is pressed\");\n  };\n\n  const state = {\n    renderView: 0\n  }; // const clickBtn = e => {\n  //   // this.setState({\n  //   //   renderView: +e.target.value\n  //   // });\n  //   const renderView = 0\n  //   renderView = +e.target.value\n  //   return <PostMessages />\n  // };\n\n  const clickBtn = e => {\n    console.log(\"Hi\");\n    state.renderView = +e.target.value;\n    const temp1 = state.renderView;\n    return temp1;\n  }; //render()\n\n\n  switch (this.temp1) {\n    //switch (state.renderView) {\n    case 1:\n      console.log(\"Hi\");\n      return /*#__PURE__*/React.createElement(PostMessages, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 14\n        }\n      });\n\n    case 2: //return <View2 />;\n\n    default:\n      //return <Main clickBtn={this.clickBtn} />;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Main, {\n        clickBtn: clickBtn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Provider, {\n        store: store,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        maxWidth: \"lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(AppBar, {\n        position: \"static\",\n        backgroundColor: \"red\",\n        className: props.classes.someClass,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Typography //className={props.classes.otherClass}\n      , {\n        variant: \"h3\",\n        align: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      }, \"TEXT  MANAGER\")), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: props.classes.actionDiv,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        className: props.classes.upperBtns1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }\n      }, \"View Text\"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        className: props.classes.upperBtns2,\n        onClick: () => onNewBtn(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }\n      }, \"New Text\"), \" \"))), /*#__PURE__*/React.createElement(ButterToast, {\n        position: {\n          vertical: POS_TOP,\n          horizontal: POS_RIGHT\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }\n      }))));\n  }\n};\n\nexport default withStyles(styles)(MyComponent); //export default MyComponent;","map":{"version":3,"sources":["D:/Projects/PAF/Text Manager/Project/text-manager-front-end/src/App.js"],"names":["React","Component","Main","Provider","PostMessages","store","Container","AppBar","Typography","withStyles","Button","Grid","ButterToast","POS_RIGHT","POS_TOP","styles","theme","someClass","margin","spacing","padding","BackgroundColor","otherClass","background","upperBtns1","width","marginLeft","upperBtns2","actionDiv","textAlign","MyComponent","props","onNewBtn","console","log","state","renderView","clickBtn","e","target","value","temp1","classes","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Main from \"./Main\";\nimport './App.css';\nimport './index.css';\nimport { Provider } from \"react-redux\";\nimport PostMessages from \"./components/PostMessages\";\nimport { store } from \"./actions/store\";\nimport { Container, AppBar, Typography, withStyles, Button, Grid } from \"@material-ui/core\";\nimport ButterToast, { POS_RIGHT, POS_TOP } from \"butter-toast\";\n\n\n\nconst styles = theme => ({\n  someClass: {\n    margin: theme.spacing(2),\n    padding: theme.spacing(2),\n    BackgroundColor: \"AliceBlue\"\n\n  },\n  otherClass: {\n    background: 'AliceBlue'\n  },\n  upperBtns1: {\n    width: \"40%\",\n    marginLeft: theme.spacing(-80)\n  },\n  upperBtns2: {\n    width: \"40%\",\n    marginLeft: theme.spacing(-60)\n  },\n  actionDiv: {\n    textAlign: \"center\",\n    marginLeft: theme.spacing(93)\n  }\n});\n\n//class App extends Component {\nconst MyComponent = (props) => {\n\n\n\n  const onNewBtn = () => {\n    console.log(\"Button is pressed\")\n  }\n\n  const state = {\n    renderView: 0\n  };\n\n  // const clickBtn = e => {\n  //   // this.setState({\n  //   //   renderView: +e.target.value\n  //   // });\n  //   const renderView = 0\n  //   renderView = +e.target.value\n  //   return <PostMessages />\n  // };\n\n  const clickBtn = e => {\n    console.log(\"Hi\")\n    state.renderView = + e.target.value\n    const temp1 = state.renderView;\n    return temp1\n\n  };\n\n  //render()\n  switch (this.temp1) {\n    //switch (state.renderView) {\n    case 1:\n      console.log(\"Hi\")\n      return <PostMessages />;\n    case 2:\n    //return <View2 />;\n    default:\n      //return <Main clickBtn={this.clickBtn} />;\n\n\n      return (\n        <div>\n          <Main clickBtn={clickBtn} />\n          <Provider store={store} >\n            <Container maxWidth=\"lg\">\n              <AppBar position=\"static\" backgroundColor=\"red\" className={props.classes.someClass}>\n                <Typography\n                  //className={props.classes.otherClass}\n                  variant=\"h3\"\n                  align=\"left\">\n                  TEXT  MANAGER\n          </Typography>\n              </AppBar>\n              <Grid item xs={12}>\n\n                <div>\n                  <div className={props.classes.actionDiv}>\n                    <Button variant=\"contained\" color=\"primary\" size=\"large\"\n                      className={props.classes.upperBtns1}\n\n                    >\n                      View Text\n                                                    </Button>\n                    <Button variant=\"contained\" color=\"primary\" size=\"large\"\n                      className={props.classes.upperBtns2}\n                      onClick={() => onNewBtn()}\n                    >\n                      New Text\n                                                    </Button>{\" \"}\n                  </div>\n                </div>\n\n              </Grid>\n              {/* <PostMessages /> */}\n              <ButterToast position={{ vertical: POS_TOP, horizontal: POS_RIGHT }} />\n            </Container>\n          </Provider>\n        </div>\n      );\n  }\n\n}\n\n\nexport default withStyles(styles)(MyComponent);\n//export default MyComponent;"]},"metadata":{},"sourceType":"module"}