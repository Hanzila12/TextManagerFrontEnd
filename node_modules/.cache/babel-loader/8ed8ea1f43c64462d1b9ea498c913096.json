{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\PAF\\\\Text Manager\\\\Project\\\\text-manager-front-end\\\\src\\\\App.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport Main from \"./Main\";\nimport View1 from \"./View1\";\nimport './App.css';\nimport './index.css';\nimport { Provider } from \"react-redux\";\nimport PostMessages from \"./components/PostMessages\";\nimport { store } from \"./actions/store\";\nimport { Container, AppBar, Typography, withStyles, Button, Grid } from \"@material-ui/core\";\nimport ButterToast, { POS_RIGHT, POS_TOP } from \"butter-toast\";\nimport { render } from 'react-dom';\nimport { connect } from \"react-redux\";\n\nconst styles = theme => ({\n  someClass: {\n    margin: theme.spacing(2),\n    padding: theme.spacing(2),\n    BackgroundColor: \"AliceBlue\"\n  },\n  otherClass: {\n    background: 'AliceBlue'\n  },\n  upperBtns1: {\n    width: \"40%\",\n    marginLeft: theme.spacing(-80)\n  },\n  upperBtns2: {\n    width: \"40%\",\n    marginLeft: theme.spacing(-60)\n  },\n  actionDiv: {\n    textAlign: \"center\",\n    marginLeft: theme.spacing(93)\n  }\n}); // //class App extends Component {\n// const MyComponent = (props) => {\n//   const onNewBtn = () => {\n//     console.log(\"Button is pressed\")\n//   }\n//   const state = {\n//     renderView: ''\n//   };\n//   // const clickBtn = e => {\n//   //   // this.setState({\n//   //   //   renderView: +e.target.value\n//   //   // });\n//   //   const renderView = 0\n//   //   renderView = +e.target.value\n//   //   return <PostMessages />\n//   // };\n//   const clickBtn = e => {\n//     //console.log(\"Hi\")\n//     state.renderView = + e.target.value\n//     console.log(state.renderView)\n//     console.log(state)\n//   };\n//   // const clickBtn = e => {\n//   //   useState.store({\n//   //     renderView: +e.target.value\n//   //   });\n//   // };\n//   switch (state.renderView) {\n//     //switch (state.renderView) {\n//     case 1:\n//       console.log(\"Hi from New Text\")\n//     // return <PostMessages />;\n//     case 2:\n//     //return <View2 />;\n//     default:\n//       console.log(\"Hi from default\")\n//       //return <Main clickBtn={this.clickBtn} />;\n//       return (\n//         <div>\n//           <Main clickBtn={clickBtn} />\n//           <Provider store={store} >\n//             <Container maxWidth=\"lg\">\n//               <AppBar position=\"static\" backgroundColor=\"red\" className={props.classes.someClass}>\n//                 <Typography\n//                   //className={props.classes.otherClass}\n//                   variant=\"h3\"\n//                   align=\"left\">\n//                   TEXT  MANAGER\n//           </Typography>\n//               </AppBar>\n//               <Grid item xs={12}>\n//                 <div>\n//                   <div className={props.classes.actionDiv}>\n//                     <Button variant=\"contained\" color=\"primary\" size=\"large\"\n//                       className={props.classes.upperBtns1}\n//                     >\n//                       View Text\n//                                                     </Button>\n//                     <Button variant=\"contained\" color=\"primary\" size=\"large\"\n//                       className={props.classes.upperBtns2}\n//                       onClick={() => onNewBtn()}\n//                     >\n//                       New Text\n//                                                     </Button>{\" \"}\n//                   </div>\n//                 </div>\n//               </Grid>\n//               {/* <PostMessages /> */}\n//               <ButterToast position={{ vertical: POS_TOP, horizontal: POS_RIGHT }} />\n//             </Container>\n//           </Provider>\n//         </div>\n//       );\n//   }\n// }\n// export default withStyles(styles)(MyComponent);\n// //export default MyComponent;\n\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.styles = theme => ({\n      someClass: {\n        margin: theme.spacing(2),\n        padding: theme.spacing(2),\n        BackgroundColor: \"AliceBlue\"\n      },\n      otherClass: {\n        background: 'AliceBlue'\n      },\n      upperBtns1: {\n        width: \"40%\",\n        marginLeft: theme.spacing(-80)\n      },\n      upperBtns2: {\n        width: \"40%\",\n        marginLeft: theme.spacing(-60)\n      },\n      actionDiv: {\n        textAlign: \"center\",\n        marginLeft: theme.spacing(93)\n      }\n    });\n\n    this.state = {\n      renderView: ''\n    };\n\n    this.clickBtn = e => {\n      this.setState({\n        renderView: +e.target.value\n      });\n    };\n  }\n\n  // const clickBtn = e => {\n  //   useState.store({\n  //     renderView: +e.target.value\n  //   });\n  // };\n  render() {\n    switch (this.state.renderView) {\n      //switch (state.renderView) {\n      case 1:\n        return /*#__PURE__*/React.createElement(Provider, {\n          store: store,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(PostMessages, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }\n        }));\n\n      case 2: //return <View2 />;\n\n      default:\n        console.log(\"Hi from default\"); //return <Main clickBtn={this.clickBtn} />;\n\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Main, {\n          clickBtn: this.clickBtn,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(Provider, {\n          store: store,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Container, {\n          maxWidth: \"lg\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(ButterToast, {\n          position: {\n            vertical: POS_TOP,\n            horizontal: POS_RIGHT\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 17\n          }\n        }))));\n    }\n  }\n\n}\n\nexport default withStyles(styles)(App); //export default MyComponent;","map":{"version":3,"sources":["D:/Projects/PAF/Text Manager/Project/text-manager-front-end/src/App.js"],"names":["React","Component","useState","useEffect","Main","View1","Provider","PostMessages","store","Container","AppBar","Typography","withStyles","Button","Grid","ButterToast","POS_RIGHT","POS_TOP","render","connect","styles","theme","someClass","margin","spacing","padding","BackgroundColor","otherClass","background","upperBtns1","width","marginLeft","upperBtns2","actionDiv","textAlign","App","state","renderView","clickBtn","e","setState","target","value","console","log","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\nimport Main from \"./Main\";\nimport View1 from \"./View1\";\nimport './App.css';\nimport './index.css';\nimport { Provider } from \"react-redux\";\nimport PostMessages from \"./components/PostMessages\";\nimport { store } from \"./actions/store\";\nimport { Container, AppBar, Typography, withStyles, Button, Grid } from \"@material-ui/core\";\nimport ButterToast, { POS_RIGHT, POS_TOP } from \"butter-toast\";\nimport { render } from 'react-dom';\nimport { connect } from \"react-redux\";\n\n\n\n\nconst styles = theme => ({\n  someClass: {\n    margin: theme.spacing(2),\n    padding: theme.spacing(2),\n    BackgroundColor: \"AliceBlue\"\n\n  },\n  otherClass: {\n    background: 'AliceBlue'\n  },\n  upperBtns1: {\n    width: \"40%\",\n    marginLeft: theme.spacing(-80)\n  },\n  upperBtns2: {\n    width: \"40%\",\n    marginLeft: theme.spacing(-60)\n  },\n  actionDiv: {\n    textAlign: \"center\",\n    marginLeft: theme.spacing(93)\n  }\n});\n\n// //class App extends Component {\n// const MyComponent = (props) => {\n\n\n\n//   const onNewBtn = () => {\n//     console.log(\"Button is pressed\")\n//   }\n\n//   const state = {\n//     renderView: ''\n//   };\n\n//   // const clickBtn = e => {\n//   //   // this.setState({\n//   //   //   renderView: +e.target.value\n//   //   // });\n//   //   const renderView = 0\n//   //   renderView = +e.target.value\n//   //   return <PostMessages />\n//   // };\n\n//   const clickBtn = e => {\n//     //console.log(\"Hi\")\n\n//     state.renderView = + e.target.value\n//     console.log(state.renderView)\n//     console.log(state)\n\n//   };\n\n\n//   // const clickBtn = e => {\n//   //   useState.store({\n//   //     renderView: +e.target.value\n//   //   });\n//   // };\n\n\n//   switch (state.renderView) {\n//     //switch (state.renderView) {\n//     case 1:\n//       console.log(\"Hi from New Text\")\n\n//     // return <PostMessages />;\n//     case 2:\n//     //return <View2 />;\n//     default:\n//       console.log(\"Hi from default\")\n//       //return <Main clickBtn={this.clickBtn} />;\n\n\n//       return (\n//         <div>\n//           <Main clickBtn={clickBtn} />\n//           <Provider store={store} >\n//             <Container maxWidth=\"lg\">\n//               <AppBar position=\"static\" backgroundColor=\"red\" className={props.classes.someClass}>\n//                 <Typography\n//                   //className={props.classes.otherClass}\n//                   variant=\"h3\"\n//                   align=\"left\">\n//                   TEXT  MANAGER\n//           </Typography>\n//               </AppBar>\n//               <Grid item xs={12}>\n\n//                 <div>\n//                   <div className={props.classes.actionDiv}>\n//                     <Button variant=\"contained\" color=\"primary\" size=\"large\"\n//                       className={props.classes.upperBtns1}\n\n//                     >\n//                       View Text\n//                                                     </Button>\n//                     <Button variant=\"contained\" color=\"primary\" size=\"large\"\n//                       className={props.classes.upperBtns2}\n//                       onClick={() => onNewBtn()}\n//                     >\n//                       New Text\n//                                                     </Button>{\" \"}\n//                   </div>\n//                 </div>\n\n//               </Grid>\n//               {/* <PostMessages /> */}\n//               <ButterToast position={{ vertical: POS_TOP, horizontal: POS_RIGHT }} />\n//             </Container>\n//           </Provider>\n//         </div>\n//       );\n//   }\n\n// }\n\n\n// export default withStyles(styles)(MyComponent);\n// //export default MyComponent;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass App extends Component {\n\n\n\n  styles = theme => ({\n    someClass: {\n      margin: theme.spacing(2),\n      padding: theme.spacing(2),\n      BackgroundColor: \"AliceBlue\"\n\n    },\n    otherClass: {\n      background: 'AliceBlue'\n    },\n    upperBtns1: {\n      width: \"40%\",\n      marginLeft: theme.spacing(-80)\n    },\n    upperBtns2: {\n      width: \"40%\",\n      marginLeft: theme.spacing(-60)\n    },\n    actionDiv: {\n      textAlign: \"center\",\n      marginLeft: theme.spacing(93)\n    }\n  });\n\n\n\n\n  state = {\n    renderView: ''\n  };\n\n  // const clickBtn = e => {\n  //   // this.setState({\n  //   //   renderView: +e.target.value\n  //   // });\n  //   const renderView = 0\n  //   renderView = +e.target.value\n  //   return <PostMessages />\n  // };\n\n  clickBtn = e => {\n    this.setState({\n      renderView: +e.target.value\n    });\n  };\n\n\n  // const clickBtn = e => {\n  //   useState.store({\n  //     renderView: +e.target.value\n  //   });\n  // };\n\n  render() {\n\n\n    switch (this.state.renderView) {\n      //switch (state.renderView) {\n      case 1:\n\n        return (\n          <Provider store={store}>\n            <PostMessages />\n          </Provider>);\n\n\n      case 2:\n      //return <View2 />;\n      default:\n        console.log(\"Hi from default\")\n        //return <Main clickBtn={this.clickBtn} />;\n\n\n        return (\n          <div>\n            <Main clickBtn={this.clickBtn} />\n            <Provider store={store} >\n              <Container maxWidth=\"lg\">\n                {/* <AppBar position=\"static\" backgroundColor=\"red\" className={styles.someClass}>\n                  <Typography\n                    //className={props.classes.otherClass}\n                    variant=\"h3\"\n                    align=\"left\">\n                    TEXT  MANAGER\n          </Typography>\n                </AppBar> */}\n                {/* <Grid item xs={12}>\n\n                  <div>\n                    <div className={this.actionDiv}>\n                      <Button variant=\"contained\" color=\"primary\" size=\"large\"\n                        className={this.styles.upperBtns1}\n\n                      >\n                        View Text\n                                                    </Button>\n                      <Button variant=\"contained\" color=\"primary\" size=\"large\"\n                        className={this.upperBtns2}\n                      // onClick={() => onNewBtn()}\n                      >\n                        New Text\n                                                    </Button>{\" \"}\n                    </div>\n                  </div>\n\n                </Grid> */}\n                {/* <PostMessages /> */}\n                <ButterToast position={{ vertical: POS_TOP, horizontal: POS_RIGHT }} />\n              </Container>\n            </Provider>\n          </div>\n        );\n    }\n\n  }\n}\n\n\nexport default withStyles(styles)(App);\n//export default MyComponent;\n"]},"metadata":{},"sourceType":"module"}