{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\PAF\\\\Text Manager\\\\Project\\\\text-manager-front-end\\\\src\\\\components\\\\PostMessages.js\";\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/postMessage\";\nimport { Grid, Paper, withStyles, List, ListItem, ListItemText, Typography, Divider, Button } from \"@material-ui/core\";\nimport PostMessageForm from \"./PostMessageForm\";\nimport ButterToast, { Cinnamon } from \"butter-toast\";\nimport { DeleteSweep } from \"@material-ui/icons\";\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(3),\n    padding: theme.spacing(2)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  },\n  upperBtns: {\n    width: \"15%\",\n    margin: theme.spacing(2)\n  },\n  gridAlign: {\n    alignItems: \"center\",\n    justify: \"center\",\n    margin: theme.spacing(3),\n    padding: theme.spacing(2)\n  }\n});\n\nconst PostMessages = ({\n  classes,\n  ...props\n}) => {\n  const [currentId, setCurrentId] = useState(0);\n  useEffect(() => {\n    props.fetchAllPostMessages();\n  }, []);\n\n  const onDelete = id => {\n    const onSuccess = () => {\n      ButterToast.raise({\n        content: /*#__PURE__*/React.createElement(Cinnamon.Crisp, {\n          title: \"Post Box\",\n          content: \"Deleted successfully\",\n          scheme: Cinnamon.Crisp.SCHEME_PURPLE,\n          icon: /*#__PURE__*/React.createElement(DeleteSweep, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 18\n          }\n        })\n      });\n    };\n\n    if (window.confirm('Are you sure to delete this record?')) props.deletePostMessage(id, onSuccess);\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.actionDiv,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    className: classes.upperBtns //onClick={() => setCurrentId(record._id)}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"View Text\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    className: classes.upperBtns //onClick={() => onDelete(record._id)}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"New Text\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    justify: \"center\",\n    className: classes.gridAlign,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PostMessageForm, Object.assign({\n    currentId,\n    setCurrentId\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, props.postMessageList.map((record, index) => {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ListItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    }, record.title), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    }, record.message), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.actionDiv,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"small\",\n      className: classes.smMargin,\n      onClick: () => setCurrentId(record._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 27\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      size: \"small\",\n      className: classes.smMargin,\n      onClick: () => onDelete(record._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 27\n      }\n    }, \"Delete\")))), /*#__PURE__*/React.createElement(Divider, {\n      component: \"li\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }));\n  })))));\n};\n\nconst mapStateToProps = state => ({\n  postMessageList: state.postMessage.list\n});\n\nconst mapActionToProps = {\n  fetchAllPostMessages: actions.fetchAll,\n  deletePostMessage: actions.Delete\n};\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(PostMessages));","map":{"version":3,"sources":["D:/Projects/PAF/Text Manager/Project/text-manager-front-end/src/components/PostMessages.js"],"names":["React","useEffect","useState","Fragment","connect","actions","Grid","Paper","withStyles","List","ListItem","ListItemText","Typography","Divider","Button","PostMessageForm","ButterToast","Cinnamon","DeleteSweep","styles","theme","paper","margin","spacing","padding","smMargin","actionDiv","textAlign","upperBtns","width","gridAlign","alignItems","justify","PostMessages","classes","props","currentId","setCurrentId","fetchAllPostMessages","onDelete","id","onSuccess","raise","content","Crisp","SCHEME_PURPLE","window","confirm","deletePostMessage","postMessageList","map","record","index","title","message","_id","mapStateToProps","state","postMessage","list","mapActionToProps","fetchAll","Delete"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/postMessage\";\r\nimport { Grid, Paper, withStyles, List, ListItem, ListItemText, Typography, Divider, Button } from \"@material-ui/core\";\r\nimport PostMessageForm from \"./PostMessageForm\";\r\nimport ButterToast, { Cinnamon } from \"butter-toast\";\r\nimport { DeleteSweep } from \"@material-ui/icons\";\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    margin: theme.spacing(3),\r\n    padding: theme.spacing(2)\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  actionDiv: {\r\n    textAlign: \"center\"\r\n  },\r\n  upperBtns: {\r\n    width: \"15%\",\r\n    margin: theme.spacing(2)\r\n  },\r\n  gridAlign: {\r\n    alignItems: \"center\",\r\n    justify: \"center\",\r\n    margin: theme.spacing(3),\r\n    padding: theme.spacing(2)\r\n  }\r\n})\r\n\r\nconst PostMessages = ({ classes, ...props }) => {\r\n  const [currentId, setCurrentId] = useState(0)\r\n\r\n  useEffect(() => {\r\n    props.fetchAllPostMessages()\r\n  }, [])\r\n\r\n  const onDelete = id => {\r\n    const onSuccess = () => {\r\n      ButterToast.raise({\r\n        content: <Cinnamon.Crisp title=\"Post Box\"\r\n          content=\"Deleted successfully\"\r\n          scheme={Cinnamon.Crisp.SCHEME_PURPLE}\r\n          icon={<DeleteSweep />}\r\n        />\r\n      })\r\n    }\r\n    if (window.confirm('Are you sure to delete this record?'))\r\n      props.deletePostMessage(id, onSuccess)\r\n  }\r\n\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12}>\r\n\r\n        <div>\r\n          <div className={classes.actionDiv}>\r\n            <Button variant=\"contained\" color=\"primary\" size=\"large\"\r\n              className={classes.upperBtns}\r\n            //onClick={() => setCurrentId(record._id)}\r\n            >\r\n              View Text\r\n                                                    </Button>\r\n            <Button variant=\"contained\" color=\"primary\" size=\"large\"\r\n              className={classes.upperBtns}\r\n            //onClick={() => onDelete(record._id)}\r\n            >\r\n              New Text\r\n                                                    </Button>\r\n          </div>\r\n        </div>\r\n\r\n      </Grid>\r\n      <Grid item xs={10} justify=\"center\" className={classes.gridAlign}>\r\n        <Paper className={classes.paper}>\r\n          <PostMessageForm {...{ currentId, setCurrentId }} />\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={7}>\r\n        <Paper className={classes.paper}>\r\n          <List>\r\n            {\r\n              props.postMessageList.map((record, index) => {\r\n                return (\r\n                  <Fragment key={index}>\r\n                    <ListItem>\r\n                      <ListItemText>\r\n                        <Typography variant=\"h5\">\r\n                          {record.title}\r\n                        </Typography>\r\n                        <div>\r\n                          {record.message}\r\n                        </div>\r\n                        <div className={classes.actionDiv}>\r\n                          <Button variant=\"contained\" color=\"primary\" size=\"small\"\r\n                            className={classes.smMargin}\r\n                            onClick={() => setCurrentId(record._id)}>\r\n                            Edit\r\n                                                    </Button>\r\n                          <Button variant=\"contained\" color=\"secondary\" size=\"small\"\r\n                            className={classes.smMargin}\r\n                            onClick={() => onDelete(record._id)}>\r\n                            Delete\r\n                                                    </Button>\r\n                        </div>\r\n                      </ListItemText>\r\n                    </ListItem>\r\n                    <Divider component=\"li\" />\r\n                  </Fragment>\r\n                )\r\n              })\r\n            }\r\n          </List>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  postMessageList: state.postMessage.list\r\n})\r\n\r\nconst mapActionToProps = {\r\n  fetchAllPostMessages: actions.fetchAll,\r\n  deletePostMessage: actions.Delete\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(PostMessages));"]},"metadata":{},"sourceType":"module"}