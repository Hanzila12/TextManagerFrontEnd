{"ast":null,"code":"import _slicedToArray from\"D:\\\\Projects\\\\PAF\\\\Text Manager\\\\Project\\\\text-manager-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"D:\\\\Projects\\\\PAF\\\\Text Manager\\\\Project\\\\text-manager-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";import React,{useEffect,useState,Fragment}from\"react\";import{connect}from\"react-redux\";import*as actions from\"../actions/postMessage\";import{Grid,Paper,withStyles,List,ListItem,ListItemText,Typography,Divider,Button}from\"@material-ui/core\";import PostMessageForm from\"./PostMessageForm\";import{Link,animateScroll as scroll}from\"react-scroll\";import ButterToast,{Cinnamon}from\"butter-toast\";import{DeleteSweep}from\"@material-ui/icons\";import{tsConstructorType}from\"@babel/types\";var styles=function styles(theme){return{paper:{top:\"100%\",margin:theme.spacing(3),padding:theme.spacing(8)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\",marginLeft:theme.spacing(93)},upperBtns1:{width:\"40%\",marginLeft:theme.spacing(-80)},upperBtns2:{width:\"40%\",marginLeft:theme.spacing(-60)},gridAlign:{marginLeft:theme.spacing(15)},ntxt:{marginLeft:theme.spacing(1)}};};var PostMessages=function PostMessages(_ref){var classes=_ref.classes,props=_objectWithoutProperties(_ref,[\"classes\"]);var _useState=useState(0),_useState2=_slicedToArray(_useState,2),currentId=_useState2[0],setCurrentId=_useState2[1];useEffect(function(){props.fetchAllPostMessages();},[]);var onDelete=function onDelete(id){var onSuccess=function onSuccess(){ButterToast.raise({content:/*#__PURE__*/React.createElement(Cinnamon.Crisp,{title:\"Post Box\",content:\"Deleted successfully\",scheme:Cinnamon.Crisp.SCHEME_PURPLE,icon:/*#__PURE__*/React.createElement(DeleteSweep,null)})});};if(window.confirm('Are you sure to delete this record?'))props.deletePostMessage(id,onSuccess);};return/*#__PURE__*/React.createElement(Grid,{container:true},/*#__PURE__*/React.createElement(Grid,{item:true,xs:10,className:classes.gridAlign},/*#__PURE__*/React.createElement(Paper,{className:classes.paper},/*#__PURE__*/React.createElement(\"h1\",{className:classes.ntxt},\"NEW TEXT\"),/*#__PURE__*/React.createElement(PostMessageForm,{currentId:currentId,setCurrentId:setCurrentId}))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:10,className:classes.gridAlign},/*#__PURE__*/React.createElement(Paper,{className:classes.paper},/*#__PURE__*/React.createElement(List,null,/*#__PURE__*/React.createElement(\"h1\",{className:classes.ntxt,id:\"view1\"},\"VIEW TEXT\"),props.postMessageList.map(function(record,index){return/*#__PURE__*/React.createElement(Fragment,{key:index},/*#__PURE__*/React.createElement(ListItem,null,/*#__PURE__*/React.createElement(ListItemText,null,/*#__PURE__*/React.createElement(Typography,{variant:\"h5\"},record.title),/*#__PURE__*/React.createElement(\"div\",null,record.message),/*#__PURE__*/React.createElement(\"div\",{className:classes.actionDiv},/*#__PURE__*/React.createElement(Button,{variant:\"text\",color:\"primary\",size:\"small\",className:classes.smMargin,onClick:function onClick(){return setCurrentId(record._id);}},/*#__PURE__*/React.createElement(\"h3\",null,\"Edit\")),/*#__PURE__*/React.createElement(Button,{variant:\"text\",color:\"primary\",size:\"small\",className:classes.smMargin,onClick:function onClick(){return onDelete(record._id);}},/*#__PURE__*/React.createElement(\"h3\",null,\"Delete\"))))),/*#__PURE__*/React.createElement(Divider,{component:\"li\"}));})))));};var mapStateToProps=function mapStateToProps(state){return{postMessageList:state.postMessage.list};};var mapActionToProps={fetchAllPostMessages:actions.fetchAll,deletePostMessage:actions.Delete};export default connect(mapStateToProps,mapActionToProps)(withStyles(styles)(PostMessages));","map":{"version":3,"sources":["D:/Projects/PAF/Text Manager/Project/text-manager-front-end/src/components/PostMessages.js"],"names":["React","useEffect","useState","Fragment","connect","actions","Grid","Paper","withStyles","List","ListItem","ListItemText","Typography","Divider","Button","PostMessageForm","Link","animateScroll","scroll","ButterToast","Cinnamon","DeleteSweep","tsConstructorType","styles","theme","paper","top","margin","spacing","padding","smMargin","actionDiv","textAlign","marginLeft","upperBtns1","width","upperBtns2","gridAlign","ntxt","PostMessages","classes","props","currentId","setCurrentId","fetchAllPostMessages","onDelete","id","onSuccess","raise","content","Crisp","SCHEME_PURPLE","window","confirm","deletePostMessage","postMessageList","map","record","index","title","message","_id","mapStateToProps","state","postMessage","list","mapActionToProps","fetchAll","Delete"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/postMessage\";\r\nimport { Grid, Paper, withStyles, List, ListItem, ListItemText, Typography, Divider, Button } from \"@material-ui/core\";\r\nimport PostMessageForm from \"./PostMessageForm\";\r\nimport { Link, animateScroll as scroll } from \"react-scroll\";\r\nimport ButterToast, { Cinnamon } from \"butter-toast\";\r\nimport { DeleteSweep } from \"@material-ui/icons\";\r\nimport { tsConstructorType } from \"@babel/types\";\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    top: \"100%\",\r\n    margin: theme.spacing(3),\r\n    padding: theme.spacing(8)\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  actionDiv: {\r\n    textAlign: \"center\",\r\n    marginLeft: theme.spacing(93)\r\n  },\r\n  upperBtns1: {\r\n    width: \"40%\",\r\n    marginLeft: theme.spacing(-80)\r\n  },\r\n  upperBtns2: {\r\n    width: \"40%\",\r\n    marginLeft: theme.spacing(-60)\r\n  },\r\n  gridAlign: {\r\n\r\n    marginLeft: theme.spacing(15)\r\n  },\r\n  ntxt: {\r\n\r\n    marginLeft: theme.spacing(1)\r\n  }\r\n})\r\n\r\nconst PostMessages = ({ classes, ...props }) => {\r\n\r\n  const [currentId, setCurrentId] = useState(0)\r\n\r\n  useEffect(() => {\r\n    props.fetchAllPostMessages()\r\n  }, [])\r\n\r\n  const onDelete = id => {\r\n    const onSuccess = () => {\r\n      ButterToast.raise({\r\n        content: <Cinnamon.Crisp title=\"Post Box\"\r\n          content=\"Deleted successfully\"\r\n          scheme={Cinnamon.Crisp.SCHEME_PURPLE}\r\n          icon={<DeleteSweep />}\r\n        />\r\n      })\r\n    }\r\n    if (window.confirm('Are you sure to delete this record?'))\r\n      props.deletePostMessage(id, onSuccess)\r\n  }\r\n\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={10} className={classes.gridAlign}>\r\n        <Paper className={classes.paper}>\r\n          <h1 className={classes.ntxt}>NEW TEXT</h1>\r\n          <PostMessageForm {...{ currentId, setCurrentId }} />\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={10} className={classes.gridAlign}>\r\n        <Paper className={classes.paper}>\r\n          <List>\r\n            <h1 className={classes.ntxt} id=\"view1\">VIEW TEXT</h1>\r\n            {\r\n              props.postMessageList.map((record, index) => {\r\n                return (\r\n                  <Fragment key={index}>\r\n                    <ListItem>\r\n                      <ListItemText>\r\n                        <Typography variant=\"h5\">\r\n                          {record.title}\r\n                        </Typography>\r\n                        <div>\r\n                          {record.message}\r\n                        </div>\r\n                        <div className={classes.actionDiv}>\r\n                          <Button variant=\"text\" color=\"primary\" size=\"small\"\r\n                            className={classes.smMargin}\r\n                            onClick={() => setCurrentId(record._id)}>\r\n                            <h3>\r\n                              Edit\r\n                            </h3>\r\n                          </Button>\r\n                          <Button variant=\"text\" color=\"primary\" size=\"small\"\r\n                            className={classes.smMargin}\r\n                            onClick={() => onDelete(record._id)}>\r\n                            <h3>\r\n                              Delete\r\n                            </h3>\r\n                          </Button>\r\n                        </div>\r\n                      </ListItemText>\r\n                    </ListItem>\r\n                    <Divider component=\"li\" />\r\n                  </Fragment>\r\n                )\r\n              })\r\n            }\r\n          </List>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid >\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  postMessageList: state.postMessage.list\r\n})\r\n\r\nconst mapActionToProps = {\r\n  fetchAllPostMessages: actions.fetchAll,\r\n  deletePostMessage: actions.Delete\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(PostMessages));"]},"metadata":{},"sourceType":"module"}